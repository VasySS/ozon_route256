version: "3.1"

volumes:
  postgresql_data:

services:
  postgresql:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=route256
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: route256-postgresql
  valkey:
    image: valkey/valkey:latest
    ports:
      - "6379:6379"
    restart: unless-stopped
    container_name: route256-valkey
  kafka-ui:
    container_name: route256-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      DYNAMIC_CONFIG_ENABLED: "true"
  kafka0:
    container_name: route256-kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk" #https://sleeplessbeastie.eu/2021/10/22/how-to-generate-kafka-cluster-id/
    healthcheck:
      test: ["CMD", "bash", "-c", "cub kafka-ready -b kafka0:29092 1 20"]
      interval: 10s
      retries: 5
  kafka-init-topics:
    container_name: route256-init-topics
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka0
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka0:29092 1 30 && \
      kafka-topics --create --topic pvz.events-log --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092'"
  notifier:
    container_name: route256-notifier
    image: go-notifier-image
    build:
      context: ./
      dockerfile: ./build/dev/notifier/Dockerfile
    depends_on:
      kafka0:
        condition: service_healthy
